{"version":3,"names":["sides","alignments","placements","reduce","acc","side","concat","min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","replace","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","map","expandPaddingObject","padding","getPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","async","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","getElementRects","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","initialPlacement","elements","detectOverflow","state","options","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","arrow","arrowDimensions","getDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","centerOffset","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","crossAxis","detectOverflowOptions","placements$1","undefined","overflow","currentIndex","index","currentPlacement","alignmentSides","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","d","slice","sort","a","b","placementsThatFitOnEachSide","every","resetPlacement","flip","_middlewareData$arrow","_middlewareData$flip","mainAxis","checkMainAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","initialSideAxis","isBasePlacement","hasFallbackAxisSideDirection","push","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$filter2","currentSideAxis","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","nativeClientRects","Array","from","getClientRects","clientRects","fallback","getBoundingClientRect","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","resetRects","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","_middlewareData$offse","diffCoords","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","enabled","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","size","_state$middlewareData","_state$middlewareData2","apply","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","hasWindow","window","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isTopLayer","selector","matches","e","isContainingBlock","elementOrCss","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","willChange","contain","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","CSS","supports","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","visualViewport","parent","Object","getPrototypeOf","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","getHTMLOffset","scroll","ignoreScrollbarX","htmlRect","topLayer","isOffsetParentAnElement","offsetRect","htmlOffset","getDocumentRect","html","scrollWidth","clientWidth","scrollHeight","clientHeight","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","position","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","shouldDropCurrentNode","ancestor","set","elementClippingAncestors","this","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getRectRelativeToOffsetParent","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","svgOffsetParent","getOffsetParentFn","getDimensionsFn","floatingDimensions","observeMove","onMove","io","timeoutId","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","IntersectionObserver","observe","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","frameId","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","offset$1","autoPlacement$1","shift$1","flip$1","size$1","hide$1","arrow$1","inline$1","limitShift$1","Map","mergedOptions","platformWithCache","computePosition$1","cmsPopoverCss","CmsPopoverStyle0","CmsTooltip","slotNameForReference","slotNameForFloating","slotNameForClose","init","elRoot","querySelector","floatingEl","closeElList","querySelectorAll","closestPopoverEl","parentElement","closest","closestPopoverFloatingEl","divArrow","createElement","setAttribute","appendChild","arrowEl","dataTrigger","handleClickReference","showPopover","hidePopover","updatePosition","dataOffset","dataAutoUpdate","dataArrowPadding","dataPlacement","then","assign","style","arrowX","arrowY","staticSide","ev","stopPropagation","preventDefault","getIsFloatingShow","handleClickFloating","handleClickClose","isNullOrUndefinedOrEmpty","activeFloatingEl","classList","remove","add","item","LANGUAGE_CODE","ENGLISH","componentDidLoad","delay","disconnectedCallback","render","h","Host","key"],"sources":["node_modules/@floating-ui/utils/dist/floating-ui.utils.esm.js","node_modules/@floating-ui/core/dist/floating-ui.core.esm.js","node_modules/@floating-ui/utils/dom/floating-ui.utils.dom.esm.js","node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js","src/components/common/cms-popover/cms-popover.scss?tag=cms-popover","src/components/common/cms-popover/cms-popover.tsx"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","cms-popover {\n  --offset: 15px;\n  position: relative;\n  [data-slot='reference-element'] {\n    cursor: pointer;\n  }\n  [data-slot='floating-element'] {\n    display: none;\n    box-sizing: border-box;\n    box-shadow: 0px 2px 8px rgba(106, 115, 129, 0.12);\n    width: 318px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: #fff;\n    color: #333;\n    padding: 16px 0px;\n    border-radius: 16px;\n    border: solid 1px #ccc;\n    z-index: 500;\n    font-size: 16px;\n    line-height: 1.71;\n    max-width: calc(100vw - 10px);\n    [data-slot='title'] {\n      margin: 0px;\n      padding: 0px 24px;\n      font-weight: 700;\n      font-size: 20px;\n    }\n    [data-slot='content'] {\n      padding: 0px 24px;\n      font-weight: 400;     \n      & > p {\n        margin: 5px 0px;        \n      }\n    }\n    [data-slot='actions'] {\n      padding: 5px 16px 0px;\n      a {\n        color: #126cc5;\n        font-weight: 400;\n        font-size: 16px;\n        text-decoration: none;\n        margin: 0px 8px;\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n    }\n\n    div[data-slot='arrow'] {\n      position: absolute;\n      background-color: transparent;\n      width: 14px;\n      height: 14px;\n      &::before {\n        position: absolute;\n        background: #fff;\n        content: ' ';\n        width: 14px;\n        height: 14px;\n        transform: rotate(45deg);\n        border: solid 1px #ccc;\n        border-radius: 4px;\n      }\n      &::after {\n        content: ' ';\n        position: absolute;\n        background-color: #fff;\n      }\n      &[data-arrow-direction='bottom'] {\n        &::after {\n          width: 20px;\n          height: 11px;\n          left: -25%;\n          bottom: 50%;\n        }\n      }\n      &[data-arrow-direction='top'] {\n        &::after {\n          width: 20px;\n          height: 11px;\n          left: -25%;\n          top: 50%;\n        }\n      }\n      &[data-arrow-direction='left'] {\n        &::after {\n          width: 11px;\n          height: 20px;\n          bottom: -25%;\n          left: 50%;\n        }\n      }\n      &[data-arrow-direction='right'] {\n        &::after {\n          width: 11px;\n          height: 20px;\n          top: -25%;\n          right: 50%;\n        }\n      }\n    }\n    &::before {\n      content: ' ';\n      background-color: transparent;    \n      position: absolute;\n    }\n    &[data-arrow-direction='bottom']{\n      &::before {     \n        width: 100%;\n        height: calc(var(--offset));\n        bottom: calc(0px - var(--offset));\n        left: 0px;\n      }\n    }\n    &[data-arrow-direction='top']{\n      &::before {     \n        width: 100%;\n        height: calc(var(--offset));\n        top: calc(0px - var(--offset));\n        left: 0px;\n      }\n    }\n    &[data-arrow-direction='left']{\n      &::before {     \n        height: 100%;\n        width: calc(var(--offset));\n        left: calc(0px - var(--offset));\n        top: 0px;\n      }\n    }\n    &[data-arrow-direction='right']{\n      &::before {     \n        height: 100%;\n        width: calc(var(--offset));\n        right: calc(0px - var(--offset));\n        top: 0px;\n      }\n    }\n  }\n}\n","import { Component, Host, h, Prop, Element } from '@stencil/core';\nimport { LANGUAGE_CODE } from '../../../constant/language';\nimport { computePosition, autoUpdate, flip, shift, offset, arrow, Middleware } from '@floating-ui/dom';\nimport { isNullOrUndefinedOrEmpty } from '../../../utils/stringHelper';\nimport { delay } from '../../../utils/eventHelper';\n\n@Component({\n  tag: 'cms-popover',\n  styleUrl: 'cms-popover.scss',\n  shadow: false,\n})\nexport class CmsTooltip {\n  /**\n   * Where to place the floating element relative to its reference element..\n   */\n  @Prop() dataPlacement:\n    | 'top'\n    | 'top-start'\n    | 'top-end'\n    | 'right'\n    | 'right-start'\n    | 'right-end'\n    | 'bottom'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left'\n    | 'left-start'\n    | 'left-end' = 'bottom';\n\n  /**\n   * The language code of the component.\n   */\n  @Prop() dataLanguageCode: string = LANGUAGE_CODE.ENGLISH;\n\n  /**\n   * Popover trigger mode. Could be hover or click.\n   */\n  @Prop() dataTrigger: 'hover' | 'click' = 'click';\n\n  /**\n   * displaces the floating element from its core placement along the specified axes.\n   */\n  @Prop() dataOffset: number = 15;\n\n  /**\n   * This describes the padding between the arrow and the edges of the floating element.\n   */\n  @Prop() dataArrowPadding: number = 25;\n\n  /**\n   * automatically call an update function when necessary so that the floating element remains anchored to the reference element in a variety of scenarios without detaching.\n   */\n  @Prop() dataAutoUpdate: boolean = true;\n\n  @Element() elRoot: HTMLElement;\n\n  private cleanup;\n  private referenceEl: HTMLElement;\n  private floatingEl: HTMLElement;\n  private arrowEl: HTMLElement;\n  private closeElList: Element[];\n  private slotNameForReference: string = 'reference-element';\n  private slotNameForFloating: string = 'floating-element';\n  private slotNameForClose: string = 'close';\n  private closestPopoverEl: HTMLElement;\n  private closestPopoverFloatingEl: HTMLElement;\n  componentDidLoad() {\n    delay(this.init, 100);\n  }\n\n  disconnectedCallback() {\n    this.hidePopover();\n    if (this.dataTrigger === 'click') {\n      if (this.referenceEl) {\n        this.referenceEl.removeEventListener('click', this.handleClickReference);\n      }\n    } else if (this.dataTrigger === 'hover') {\n      this.elRoot.removeEventListener('mouseenter', this.showPopover);\n      this.elRoot.removeEventListener('mouseleave', this.hidePopover);\n    }\n  }\n\n  init = () => {\n    this.referenceEl = this.elRoot.querySelector(`[data-slot='${this.slotNameForReference}']`);\n    this.floatingEl = this.elRoot.querySelector(`[data-slot='${this.slotNameForFloating}']`);\n    this.closeElList = Array.from(this.elRoot.querySelectorAll(`[data-slot='${this.slotNameForClose}']`));\n    this.closestPopoverEl = this.elRoot.parentElement.closest('cms-popover');\n    if (this.closestPopoverEl) {\n      this.closestPopoverFloatingEl = this.closestPopoverEl.querySelector(`[data-slot='${this.slotNameForFloating}']`);\n    }\n    const divArrow = document.createElement('div');\n    divArrow.setAttribute('data-slot', 'arrow');\n    this.floatingEl.appendChild(divArrow);\n    this.arrowEl = divArrow;\n    if (this.dataTrigger === 'click') {\n      if (this.referenceEl && this.floatingEl) {\n        this.referenceEl.addEventListener('click', this.handleClickReference);\n      }\n    } else if (this.dataTrigger === 'hover') {\n      this.elRoot.addEventListener('mouseenter', this.showPopover);\n      this.elRoot.addEventListener('mouseleave', this.hidePopover);\n    }\n  };\n  updatePosition = () => {\n    let middleware: Middleware[] = [offset(this.dataOffset)];\n    if (this.dataAutoUpdate) {\n      middleware = middleware.concat(flip());\n    }\n    middleware = middleware.concat([\n      shift({ padding: 5 }),\n      arrow({ element: this.arrowEl, padding: this.dataArrowPadding }),\n    ]);\n\n    computePosition(this.referenceEl, this.floatingEl, {\n      placement: this.dataPlacement,\n      middleware,\n    }).then(({ x, y, placement, middlewareData }) => {\n      Object.assign(this.floatingEl.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      });\n      const { x: arrowX, y: arrowY } = middlewareData.arrow;\n      const staticSide = {\n        top: 'bottom',\n        right: 'left',\n        bottom: 'top',\n        left: 'right',\n      }[placement.split('-')[0]];\n\n      Object.assign(this.arrowEl.style, {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n        right: '',\n        bottom: '',\n        [staticSide]: '-7px',\n      });\n      this.arrowEl.setAttribute('data-arrow-direction', staticSide);\n      this.floatingEl.setAttribute('data-arrow-direction', staticSide);\n    });\n  };\n\n  handleClickReference = (ev: MouseEvent) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    if (this.getIsFloatingShow()) {\n      this.hidePopover();\n    } else {\n      this.showPopover();\n    }\n  };\n  handleClickFloating = (ev: MouseEvent) => {\n    ev.stopPropagation();\n  };\n  handleClickClose = (ev: MouseEvent) => {\n    ev.stopPropagation();\n    this.hidePopover();\n  };\n\n  getIsFloatingShow = () => {\n    return (\n      this.floatingEl &&\n      !isNullOrUndefinedOrEmpty(this.floatingEl.style.display) &&\n      this.floatingEl.style.display !== 'none'\n    );\n  };\n\n  showPopover = () => {\n    const activeFloatingEl: HTMLElement = document.querySelector(`.active[data-slot=\"${this.slotNameForFloating}\"]`);\n\n    if (activeFloatingEl && !this.closestPopoverEl) {\n      activeFloatingEl.style.display = 'none';\n      activeFloatingEl.classList.remove('active');\n      activeFloatingEl.closest('cms-popover').classList.remove('active');\n    }\n\n    this.floatingEl.classList.add('active');\n    this.elRoot.classList.add('active');\n    this.floatingEl.style.display = 'block';\n    if (this.dataTrigger === 'click') {\n      if (this.floatingEl) {\n        this.floatingEl.addEventListener('click', this.handleClickFloating);\n      }\n      if (this.closeElList && this.closeElList.length > 0) {\n        for (const item of this.closeElList) {\n          item.addEventListener('click', this.handleClickClose);\n        }\n      }\n      if (this.referenceEl && this.floatingEl) {\n        document.addEventListener('click', this.hidePopover);\n        if (this.closestPopoverFloatingEl) {\n          this.closestPopoverFloatingEl.addEventListener('click', this.hidePopover);\n        }\n      }\n      if (this.dataAutoUpdate) {\n        this.cleanup = autoUpdate(this.referenceEl, this.floatingEl, this.updatePosition);\n      } else {\n        this.updatePosition();\n      }\n    } else if (this.dataTrigger === 'hover') {\n      this.updatePosition();\n    }\n  };\n\n  hidePopover = () => {\n    if (this.getIsFloatingShow()) {\n      this.floatingEl.style.display = 'none';\n      this.floatingEl.classList.remove('active');\n      this.elRoot.classList.remove('active');\n    }\n    if (this.dataTrigger === 'click') {\n      if (this.floatingEl) {\n        this.floatingEl.removeEventListener('click', this.handleClickFloating);\n      }\n      if (this.closeElList && this.closeElList.length > 0) {\n        for (const item of this.closeElList) {\n          item.removeEventListener('click', this.handleClickClose);\n        }\n      }\n      if (this.referenceEl && this.floatingEl) {\n        document.removeEventListener('click', this.hidePopover);\n        if (this.closestPopoverFloatingEl) {\n          this.closestPopoverFloatingEl.removeEventListener('click', this.hidePopover);\n        }\n      }\n      if (this.cleanup) {\n        this.cleanup();\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Host style={{ '--offset': `${this.dataOffset}px` }}>\n        <slot />\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}